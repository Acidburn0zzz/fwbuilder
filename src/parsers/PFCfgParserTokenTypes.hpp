#ifndef INC_PFCfgParserTokenTypes_hpp_
#define INC_PFCfgParserTokenTypes_hpp_

/* $ANTLR 2.7.7 (20100319): "pf.g" -> "PFCfgParserTokenTypes.hpp"$ */

#ifndef CUSTOM_API
# define CUSTOM_API
#endif

#ifdef __cplusplus
struct CUSTOM_API PFCfgParserTokenTypes {
#endif
	enum {
		EOF_ = 1,
		NEWLINE = 4,
		LINE_COMMENT = 5,
		INCLUDE_COMMAND = 6,
		WORD = 7,
		EQUAL = 8,
		ANTISPOOF = 9,
		ALTQ = 10,
		QUEUE = 11,
		SET = 12,
		TIMEOUT = 13,
		// "ruleset-optimization" = 14
		LITERAL_optimization = 15,
		LITERAL_aggressive = 16,
		LITERAL_conservative = 17,
		// "high-latency" = 18
		LITERAL_normal = 19,
		LITERAL_satellite = 20,
		LITERAL_limit = 21,
		LITERAL_loginterface = 22,
		// "block-policy" = 23
		DROP = 24,
		RETURN = 25,
		// "state-policy" = 26
		// "if-bound" = 27
		LITERAL_floating = 28,
		// "state-defaults" = 29
		// "require-order" = 30
		LITERAL_fingerprints = 31,
		LITERAL_skip = 32,
		ON = 33,
		OPENING_BRACE = 34,
		COMMA = 35,
		CLOSING_BRACE = 36,
		LITERAL_debug = 37,
		LITERAL_reassemble = 38,
		LITERAL_hostid = 39,
		// "tcp.first" = 40
		// "tcp.opening" = 41
		// "tcp.established" = 42
		// "tcp.closing" = 43
		// "tcp.finwait" = 44
		// "tcp.closed" = 45
		// "udp.first" = 46
		// "udp.single" = 47
		// "udp.multiple" = 48
		// "icmp.first" = 49
		// "icmp.error" = 50
		// "other.first" = 51
		// "other.single" = 52
		// "other.multiple" = 53
		LITERAL_frag = 54,
		LITERAL_interval = 55,
		// "src.track" = 56
		// "adaptive.start" = 57
		// "adaptive.end" = 58
		INT_CONST = 59,
		LITERAL_frags = 60,
		LITERAL_states = 61,
		// "src-nodes" = 62
		LITERAL_tables = 63,
		// "tables-entries" = 64
		SCRUB = 65,
		MATCH = 66,
		TABLE = 67,
		LESS_THAN = 68,
		GREATER_THAN = 69,
		PERSIST = 70,
		CONST_WORD = 71,
		COUNTERS = 72,
		FILE = 73,
		STRING = 74,
		EXLAMATION = 75,
		COLON = 76,
		NETWORK = 77,
		BROADCAST = 78,
		PEER = 79,
		SELF = 80,
		IPV4 = 81,
		NUMBER = 82,
		SLASH = 83,
		NO = 84,
		NAT = 85,
		PASS = 86,
		MINUS = 87,
		STATIC_PORT = 88,
		RDR = 89,
		OPENING_PAREN = 90,
		CLOSING_PAREN = 91,
		PORT = 92,
		IPV6 = 93,
		STAR = 94,
		BITMASK = 95,
		RANDOM = 96,
		SOURCE_HASH = 97,
		HEX_KEY = 98,
		STRING_KEY = 99,
		ROUND_ROBIN = 100,
		STICKY_ADDRESS = 101,
		BINAT = 102,
		BLOCK = 103,
		RETURN_RST = 104,
		TTL = 105,
		RETURN_ICMP = 106,
		RETURN_ICMP6 = 107,
		IN_WORD = 108,
		OUT_WORD = 109,
		LOG = 110,
		QUICK = 111,
		ALL = 112,
		USER = 113,
		TO = 114,
		INET = 115,
		INET6 = 116,
		PROTO = 117,
		IP = 118,
		ICMP = 119,
		IGMP = 120,
		TCP = 121,
		UDP = 122,
		RDP = 123,
		RSVP = 124,
		GRE = 125,
		ESP = 126,
		AH = 127,
		EIGRP = 128,
		OSPF = 129,
		IPIP = 130,
		VRRP = 131,
		L2TP = 132,
		ISIS = 133,
		FROM = 134,
		URPF_FAILED = 135,
		ANY = 136,
		NO_ROUTE = 137,
		ROUTE_TO = 138,
		REPLY_TO = 139,
		DUP_TO = 140,
		GROUP = 141,
		LITERAL_fragment = 142,
		LITERAL_crop = 143,
		// "drop-ovl" = 144
		// "no-df" = 145
		// "min-ttl" = 146
		// "max-mss" = 147
		// "random-id" = 148
		FLAGS = 149,
		ICMP_TYPE = 150,
		ICMP_CODE = 151,
		LITERAL_echorep = 152,
		LITERAL_unreach = 153,
		LITERAL_squench = 154,
		LITERAL_redir = 155,
		LITERAL_althost = 156,
		LITERAL_echoreq = 157,
		LITERAL_routeradv = 158,
		LITERAL_routersol = 159,
		LITERAL_timex = 160,
		LITERAL_paramprob = 161,
		LITERAL_timereq = 162,
		LITERAL_timerep = 163,
		LITERAL_inforeq = 164,
		LITERAL_inforep = 165,
		LITERAL_maskreq = 166,
		LITERAL_maskrep = 167,
		LITERAL_trace = 168,
		LITERAL_dataconv = 169,
		LITERAL_mobredir = 170,
		// "ipv6-where" = 171
		// "ipv6-here" = 172
		LITERAL_mobregreq = 173,
		LITERAL_mobregrep = 174,
		LITERAL_photuris = 175,
		// "net-unr" = 176
		// "host-unr" = 177
		// "proto-unr" = 178
		// "port-unr" = 179
		LITERAL_needfrag = 180,
		LITERAL_srcfail = 181,
		// "net-unk" = 182
		// "host-unk" = 183
		LITERAL_isolate = 184,
		// "net-prohib" = 185
		// "host-prohib" = 186
		// "net-tos" = 187
		// "host-tos" = 188
		// "filter-prohib" = 189
		// "host-preced" = 190
		// "cutoff-preced" = 191
		// "redir-net" = 192
		// "redir-host" = 193
		// "redir-tos-net" = 194
		// "redir-tos-host" = 195
		// "normal-adv" = 196
		// "common-adv" = 197
		LITERAL_transit = 198,
		LITERAL_reassemb = 199,
		LITERAL_badhead = 200,
		LITERAL_optmiss = 201,
		LITERAL_badlen = 202,
		// "unknown-ind" = 203
		// "auth-fail" = 204
		// "decrypt-fail" = 205
		ICMP6_TYPE = 206,
		TAGGED = 207,
		TAG = 208,
		KEEP = 209,
		MODULATE = 210,
		SYNPROXY = 211,
		STATE = 212,
		LABEL = 213,
		EXIT = 214,
		QUIT = 215,
		INTRFACE = 216,
		ICMP6 = 217,
		IGRP = 218,
		IPSEC = 219,
		NOS = 220,
		PCP = 221,
		PIM = 222,
		PPTP = 223,
		RIP = 224,
		SNP = 225,
		HOST = 226,
		RANGE = 227,
		LOG_LEVEL_ALERTS = 228,
		LOG_LEVEL_CRITICAL = 229,
		LOG_LEVEL_DEBUGGING = 230,
		LOG_LEVEL_EMERGENCIES = 231,
		LOG_LEVEL_ERRORS = 232,
		LOG_LEVEL_INFORMATIONAL = 233,
		LOG_LEVEL_NOTIFICATIONS = 234,
		LOG_LEVEL_WARNINGS = 235,
		LOG_LEVEL_DISABLE = 236,
		LOG_LEVEL_INACTIVE = 237,
		Whitespace = 238,
		HEX_CONST = 239,
		NEG_INT_CONST = 240,
		HEX_DIGIT = 241,
		DIGIT = 242,
		NUM_3DIGIT = 243,
		NUM_HEX_4DIGIT = 244,
		NUMBER_ADDRESS_OR_WORD = 245,
		PIPE_CHAR = 246,
		NUMBER_SIGN = 247,
		PERCENT = 248,
		AMPERSAND = 249,
		APOSTROPHE = 250,
		PLUS = 251,
		DOT = 252,
		SEMICOLON = 253,
		QUESTION = 254,
		COMMERCIAL_AT = 255,
		OPENING_SQUARE = 256,
		CLOSING_SQUARE = 257,
		CARET = 258,
		UNDERLINE = 259,
		TILDE = 260,
		DOUBLE_QUOTE = 261,
		NULL_TREE_LOOKAHEAD = 3
	};
#ifdef __cplusplus
};
#endif
#endif /*INC_PFCfgParserTokenTypes_hpp_*/
