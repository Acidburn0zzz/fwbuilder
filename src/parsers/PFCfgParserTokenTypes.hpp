#ifndef INC_PFCfgParserTokenTypes_hpp_
#define INC_PFCfgParserTokenTypes_hpp_

/* $ANTLR 2.7.7 (20100319): "pf.g" -> "PFCfgParserTokenTypes.hpp"$ */

#ifndef CUSTOM_API
# define CUSTOM_API
#endif

#ifdef __cplusplus
struct CUSTOM_API PFCfgParserTokenTypes {
#endif
	enum {
		EOF_ = 1,
		NEWLINE = 4,
		LINE_COMMENT = 5,
		WORD = 6,
		EQUAL = 7,
		ANTISPOOF = 8,
		ALTQ = 9,
		QUEUE = 10,
		SET = 11,
		SCRUB = 12,
		NAT = 13,
		BINAT = 14,
		RDR = 15,
		TIMEOUT = 16,
		PASS = 17,
		BLOCK = 18,
		IN = 19,
		OUT = 20,
		LOG = 21,
		COMMA = 22,
		ALL = 23,
		USER = 24,
		TO = 25,
		QUICK = 26,
		ON = 27,
		INET = 28,
		INET6 = 29,
		PROTO = 30,
		IP = 31,
		ICMP = 32,
		IGMP = 33,
		TCP = 34,
		UDP = 35,
		RDP = 36,
		RSVP = 37,
		GRE = 38,
		ESP = 39,
		AH = 40,
		EIGRP = 41,
		OSPF = 42,
		IPIP = 43,
		VRRP = 44,
		L2TP = 45,
		ISIS = 46,
		INT_CONST = 47,
		OPENING_BRACE = 48,
		CLOSING_BRACE = 49,
		FROM = 50,
		ANY = 51,
		SELF = 52,
		EXCLAMATION = 53,
		IPV4 = 54,
		IPV6 = 55,
		SLASH = 56,
		NO = 57,
		KEEP = 58,
		MODULATE = 59,
		SYNPROXY = 60,
		STATE = 61,
		OPENING_PAREN = 62,
		CLOSING_PAREN = 63,
		PORT = 64,
		NOT_EQUAL = 65,
		LESS_THAN = 66,
		LESS_OR_EQUAL_THAN = 67,
		GREATER_THAN = 68,
		GREATER_OR_EQUAL_THAN = 69,
		EXCEPT_RANGE = 70,
		INSIDE_RANGE = 71,
		COLON = 72,
		PORT_RANGE = 73,
		EXIT = 74,
		QUIT = 75,
		INTRFACE = 76,
		ICMP6 = 77,
		IGRP = 78,
		IPSEC = 79,
		NOS = 80,
		PCP = 81,
		PIM = 82,
		PPTP = 83,
		RIP = 84,
		SNP = 85,
		HOST = 86,
		RANGE = 87,
		LOG_LEVEL_ALERTS = 88,
		LOG_LEVEL_CRITICAL = 89,
		LOG_LEVEL_DEBUGGING = 90,
		LOG_LEVEL_EMERGENCIES = 91,
		LOG_LEVEL_ERRORS = 92,
		LOG_LEVEL_INFORMATIONAL = 93,
		LOG_LEVEL_NOTIFICATIONS = 94,
		LOG_LEVEL_WARNINGS = 95,
		LOG_LEVEL_DISABLE = 96,
		LOG_LEVEL_INACTIVE = 97,
		TRANSLATE_TO = 98,
		Whitespace = 99,
		HEX_CONST = 100,
		NUMBER = 101,
		NEG_INT_CONST = 102,
		HEX_DIGIT = 103,
		DIGIT = 104,
		NUM_3DIGIT = 105,
		NUM_HEX_4DIGIT = 106,
		NUMBER_ADDRESS_OR_WORD = 107,
		STRING = 108,
		PIPE_CHAR = 109,
		NUMBER_SIGN = 110,
		PERCENT = 111,
		AMPERSAND = 112,
		APOSTROPHE = 113,
		STAR = 114,
		PLUS = 115,
		MINUS = 116,
		DOT = 117,
		SEMICOLON = 118,
		QUESTION = 119,
		COMMERCIAL_AT = 120,
		OPENING_SQUARE = 121,
		CLOSING_SQUARE = 122,
		CARET = 123,
		UNDERLINE = 124,
		TILDE = 125,
		EXLAMATION = 126,
		NULL_TREE_LOOKAHEAD = 3
	};
#ifdef __cplusplus
};
#endif
#endif /*INC_PFCfgParserTokenTypes_hpp_*/
