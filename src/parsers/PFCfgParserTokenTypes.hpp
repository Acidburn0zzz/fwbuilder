#ifndef INC_PFCfgParserTokenTypes_hpp_
#define INC_PFCfgParserTokenTypes_hpp_

/* $ANTLR 2.7.7 (20090306): "pf.g" -> "PFCfgParserTokenTypes.hpp"$ */

#ifndef CUSTOM_API
# define CUSTOM_API
#endif

#ifdef __cplusplus
struct CUSTOM_API PFCfgParserTokenTypes {
#endif
	enum {
		EOF_ = 1,
		NEWLINE = 4,
		LINE_COMMENT = 5,
		WORD = 6,
		EQUAL = 7,
		ANTISPOOF = 8,
		ALTQ = 9,
		QUEUE = 10,
		SET = 11,
		SCRUB = 12,
		TABLE = 13,
		LESS_THAN = 14,
		GREATER_THAN = 15,
		PERSIST = 16,
		CONST = 17,
		COUNTERS = 18,
		FILE = 19,
		STRING = 20,
		OPENING_BRACE = 21,
		COMMA = 22,
		CLOSING_BRACE = 23,
		EXLAMATION = 24,
		COLON = 25,
		NETWORK = 26,
		BROADCAST = 27,
		PEER = 28,
		INT_CONST = 29,
		SELF = 30,
		IPV4 = 31,
		SLASH = 32,
		NAT = 33,
		BINAT = 34,
		RDR = 35,
		TIMEOUT = 36,
		PASS = 37,
		BLOCK = 38,
		DROP = 39,
		RETURN = 40,
		RETURN_RST = 41,
		TTL = 42,
		RETURN_ICMP = 43,
		OPENING_PAREN = 44,
		CLOSING_PAREN = 45,
		RETURN_ICMP6 = 46,
		IN = 47,
		OUT = 48,
		LOG = 49,
		ALL = 50,
		USER = 51,
		TO = 52,
		QUICK = 53,
		ON = 54,
		INET = 55,
		INET6 = 56,
		PROTO = 57,
		IP = 58,
		ICMP = 59,
		IGMP = 60,
		TCP = 61,
		UDP = 62,
		RDP = 63,
		RSVP = 64,
		GRE = 65,
		ESP = 66,
		AH = 67,
		EIGRP = 68,
		OSPF = 69,
		IPIP = 70,
		VRRP = 71,
		L2TP = 72,
		ISIS = 73,
		FROM = 74,
		URPF_FAILED = 75,
		ANY = 76,
		NO_ROUTE = 77,
		IPV6 = 78,
		ROUTE_TO = 79,
		REPLY_TO = 80,
		FLAGS = 81,
		ICMP_TYPE = 82,
		ICMP_CODE = 83,
		ICMP6_TYPE = 84,
		TAGGED = 85,
		TAG = 86,
		NO = 87,
		KEEP = 88,
		MODULATE = 89,
		SYNPROXY = 90,
		STATE = 91,
		LABEL = 92,
		PORT = 93,
		EXIT = 94,
		QUIT = 95,
		INTRFACE = 96,
		ICMP6 = 97,
		IGRP = 98,
		IPSEC = 99,
		NOS = 100,
		PCP = 101,
		PIM = 102,
		PPTP = 103,
		RIP = 104,
		SNP = 105,
		HOST = 106,
		RANGE = 107,
		LOG_LEVEL_ALERTS = 108,
		LOG_LEVEL_CRITICAL = 109,
		LOG_LEVEL_DEBUGGING = 110,
		LOG_LEVEL_EMERGENCIES = 111,
		LOG_LEVEL_ERRORS = 112,
		LOG_LEVEL_INFORMATIONAL = 113,
		LOG_LEVEL_NOTIFICATIONS = 114,
		LOG_LEVEL_WARNINGS = 115,
		LOG_LEVEL_DISABLE = 116,
		LOG_LEVEL_INACTIVE = 117,
		TRANSLATE_TO = 118,
		Whitespace = 119,
		HEX_CONST = 120,
		NUMBER = 121,
		NEG_INT_CONST = 122,
		HEX_DIGIT = 123,
		DIGIT = 124,
		NUM_3DIGIT = 125,
		NUM_HEX_4DIGIT = 126,
		NUMBER_ADDRESS_OR_WORD = 127,
		PIPE_CHAR = 128,
		NUMBER_SIGN = 129,
		PERCENT = 130,
		AMPERSAND = 131,
		APOSTROPHE = 132,
		STAR = 133,
		PLUS = 134,
		MINUS = 135,
		DOT = 136,
		SEMICOLON = 137,
		QUESTION = 138,
		COMMERCIAL_AT = 139,
		OPENING_SQUARE = 140,
		CLOSING_SQUARE = 141,
		CARET = 142,
		UNDERLINE = 143,
		TILDE = 144,
		DOUBLE_QUOTE = 145,
		NULL_TREE_LOOKAHEAD = 3
	};
#ifdef __cplusplus
};
#endif
#endif /*INC_PFCfgParserTokenTypes_hpp_*/
