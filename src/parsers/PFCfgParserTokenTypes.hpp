#ifndef INC_PFCfgParserTokenTypes_hpp_
#define INC_PFCfgParserTokenTypes_hpp_

/* $ANTLR 2.7.7 (20090306): "pf.g" -> "PFCfgParserTokenTypes.hpp"$ */

#ifndef CUSTOM_API
# define CUSTOM_API
#endif

#ifdef __cplusplus
struct CUSTOM_API PFCfgParserTokenTypes {
#endif
	enum {
		EOF_ = 1,
		NEWLINE = 4,
		LINE_COMMENT = 5,
		COLON_COMMENT = 6,
		TIMEOUT = 7,
		WORD = 8,
		PASS = 9,
		DROP = 10,
		IPV4 = 11,
		IPV6 = 12,
		EXIT = 13,
		QUIT = 14,
		NO = 15,
		INTRFACE = 16,
		IP = 17,
		ICMP = 18,
		ICMP6 = 19,
		TCP = 20,
		UDP = 21,
		AH = 22,
		EIGRP = 23,
		ESP = 24,
		GRE = 25,
		IGMP = 26,
		IGRP = 27,
		IPINIP = 28,
		IPSEC = 29,
		NOS = 30,
		OSPF = 31,
		PCP = 32,
		PIM = 33,
		PPTP = 34,
		RIP = 35,
		SNP = 36,
		HOST = 37,
		ANY = 38,
		RANGE = 39,
		LOG = 40,
		LOG_LEVEL_ALERTS = 41,
		LOG_LEVEL_CRITICAL = 42,
		LOG_LEVEL_DEBUGGING = 43,
		LOG_LEVEL_EMERGENCIES = 44,
		LOG_LEVEL_ERRORS = 45,
		LOG_LEVEL_INFORMATIONAL = 46,
		LOG_LEVEL_NOTIFICATIONS = 47,
		LOG_LEVEL_WARNINGS = 48,
		LOG_LEVEL_DISABLE = 49,
		LOG_LEVEL_INACTIVE = 50,
		Whitespace = 51,
		INT_CONST = 52,
		HEX_CONST = 53,
		NUMBER = 54,
		NEG_INT_CONST = 55,
		DIGIT = 56,
		HEXDIGIT = 57,
		NUMBER_ADDRESS_OR_WORD = 58,
		STRING = 59,
		PIPE_CHAR = 60,
		NUMBER_SIGN = 61,
		PERCENT = 62,
		AMPERSAND = 63,
		APOSTROPHE = 64,
		OPENING_PAREN = 65,
		CLOSING_PAREN = 66,
		STAR = 67,
		PLUS = 68,
		COMMA = 69,
		MINUS = 70,
		DOT = 71,
		SLASH = 72,
		COLON = 73,
		SEMICOLON = 74,
		LESS_THAN = 75,
		EQUALS = 76,
		GREATER_THAN = 77,
		QUESTION = 78,
		COMMERCIAL_AT = 79,
		OPENING_SQUARE = 80,
		CLOSING_SQUARE = 81,
		CARET = 82,
		UNDERLINE = 83,
		OPENING_BRACE = 84,
		CLOSING_BRACE = 85,
		TILDE = 86,
		EXLAMATION = 87,
		NULL_TREE_LOOKAHEAD = 3
	};
#ifdef __cplusplus
};
#endif
#endif /*INC_PFCfgParserTokenTypes_hpp_*/
