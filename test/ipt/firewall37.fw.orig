#!/bin/sh 
#
#  This is automatically generated file. DO NOT MODIFY !
#
#  Firewall Builder  fwb_ipt v4.2.0.3523
#
#  Generated Sun Apr 10 17:52:38 2011 PDT by vadim
#
# files: * firewall37.fw /etc/fw/firewall37.fw
#
# Compiled for iptables (any version)
#
# testing TAG and CLASSIFY rules

# normal script mode (not using  iptables-restore)

# firewall37:mangle_rules:4: error: DNSName object "6bone.net (ct)" (compile time) can not resolve dns name "6bone.net" (AF_INET): Host or network '6bone.net' not found; last error: Unknown error Using dummy address in test mode
# firewall37:mangle_rules:4: error: DNSName object "6bone.net (ct)" (compile time) can not resolve dns name "6bone.net" (AF_INET): Host or network '6bone.net' not found; last error: Unknown error Using dummy address in test mode
# firewall37:mangle_rules:7: warning: Empty group or address table object 'empty Ogroup'
# firewall37:mangle_rules:7: warning: After removal of all empty groups and address table objects rule element Src becomes 'any' in the rule mangle_rules 7 (global)
# Dropping rule mangle_rules 7 (global) because option 'Ignore rules with empty groups' is in effect
# firewall37:mangle_rules:13: error: DNSName object "6bone.net (ct)" (compile time) can not resolve dns name "6bone.net" (AF_INET): Host or network '6bone.net' not found; last error: Unknown error Using dummy address in test mode


FWBDEBUG=""

PATH="/sbin:/usr/sbin:/bin:/usr/bin:${PATH}"
export PATH



LSMOD="/sbin/lsmod"
MODPROBE="/sbin/modprobe"
IPTABLES="/sbin/iptables"
IP6TABLES="/sbin/ip6tables"
IPTABLES_RESTORE="/sbin/iptables-restore"
IP6TABLES_RESTORE="/sbin/ip6tables-restore"
IP="/sbin/ip"
IFCONFIG="/sbin/ifconfig"
VCONFIG="/sbin/vconfig"
BRCTL="/sbin/brctl"
IFENSLAVE="/sbin/ifenslave"
IPSET="/usr/sbin/ipset"
LOGGER="/usr/bin/logger"

log() {
    echo "$1"
    command -v "$LOGGER" >/dev/null 2>&1 && $LOGGER -p info "$1"
}

getInterfaceVarName() {
    echo $1 | sed 's/\./_/'
}

getaddr_internal() {
    dev=$1
    name=$2
    af=$3
    L=$($IP $af addr show dev $dev |  sed -n '/inet/{s!.*inet6* !!;s!/.*!!p}' | sed 's/peer.*//')
    test -z "$L" && { 
        eval "$name=''"
        return
    }
    eval "${name}_list=\"$L\"" 
}

getaddr() {
    getaddr_internal $1 $2 "-4"
}

getaddr6() {
    getaddr_internal $1 $2 "-6"
}

# function getinterfaces is used to process wildcard interfaces
getinterfaces() {
    NAME=$1
    $IP link show | grep ": $NAME" | while read L; do
        OIFS=$IFS
        IFS=" :"
        set $L
        IFS=$OIFS
        echo $2
    done
}

diff_intf() {
    func=$1
    list1=$2
    list2=$3
    cmd=$4
    for intf in $list1
    do
        echo $list2 | grep -q $intf || {
        # $vlan is absent in list 2
            $func $intf $cmd
        }
    done
}

find_program() {
  PGM=$1
  command -v $PGM >/dev/null 2>&1 || {
    echo "$PGM not found"
    exit 1
  }
}
check_tools() {
  find_program $IPTABLES 
 find_program $MODPROBE 
  find_program $IP 
}
reset_iptables_v4() {
  $IPTABLES -P OUTPUT  DROP
  $IPTABLES -P INPUT   DROP
  $IPTABLES -P FORWARD DROP

cat /proc/net/ip_tables_names | while read table; do
  $IPTABLES -t $table -L -n | while read c chain rest; do
      if test "X$c" = "XChain" ; then
        $IPTABLES -t $table -F $chain
      fi
  done
  $IPTABLES -t $table -X
done
}

reset_iptables_v6() {
  $IP6TABLES -P OUTPUT  DROP
  $IP6TABLES -P INPUT   DROP
  $IP6TABLES -P FORWARD DROP

cat /proc/net/ip6_tables_names | while read table; do
  $IP6TABLES -t $table -L -n | while read c chain rest; do
      if test "X$c" = "XChain" ; then
        $IP6TABLES -t $table -F $chain
      fi
  done
  $IP6TABLES -t $table -X
done
}


P2P_INTERFACE_WARNING=""

missing_address() {
    address=$1
    cmd=$2

    oldIFS=$IFS
    IFS="@"
    set $address
    addr=$1
    interface=$2
    IFS=$oldIFS



    $IP addr show dev $interface | grep -q POINTOPOINT && {
        test -z "$P2P_INTERFACE_WARNING" && echo "Warning: Can not update address of interface $interface. fwbuilder can not manage addresses of point-to-point interfaces yet"
        P2P_INTERFACE_WARNING="yes"
        return
    }

    test "$cmd" = "add" && {
      echo "# Adding ip address: $interface $addr"
      echo $addr | grep -q ':' && {
          $FWBDEBUG $IP addr $cmd $addr dev $interface
      } || {
          $FWBDEBUG $IP addr $cmd $addr broadcast + dev $interface
      }
    }

    test "$cmd" = "del" && {
      echo "# Removing ip address: $interface $addr"
      $FWBDEBUG $IP addr $cmd $addr dev $interface || exit 1
    }

    $FWBDEBUG $IP link set $interface up
}

list_addresses_by_scope() {
    interface=$1
    scope=$2
    ignore_list=$3
    $IP addr ls dev $interface | \
      awk -v IGNORED="$ignore_list" -v SCOPE="$scope" \
        'BEGIN {
           split(IGNORED,ignored_arr);
           for (a in ignored_arr) {ignored_dict[ignored_arr[a]]=1;}
         }
         (/inet |inet6 / && $0 ~ SCOPE && !($2 in ignored_dict)) {print $2;}' | \
        while read addr; do
          echo "${addr}@$interface"
	done | sort
}


update_addresses_of_interface() {
    ignore_list=$2
    set $1 
    interface=$1 
    shift

    FWB_ADDRS=$(
      for addr in $*; do
        echo "${addr}@$interface"
      done | sort
    )

    CURRENT_ADDRS_ALL_SCOPES=""
    CURRENT_ADDRS_GLOBAL_SCOPE=""

    $IP link show dev $interface >/dev/null 2>&1 && {
      CURRENT_ADDRS_ALL_SCOPES=$(list_addresses_by_scope $interface 'scope .*' "$ignore_list")
      CURRENT_ADDRS_GLOBAL_SCOPE=$(list_addresses_by_scope $interface 'scope global' "$ignore_list")
    } || {
      echo "# Interface $interface does not exist"
      # Stop the script if we are not in test mode
      test -z "$FWBDEBUG" && exit 1
    }

    diff_intf missing_address "$FWB_ADDRS" "$CURRENT_ADDRS_ALL_SCOPES" add
    diff_intf missing_address "$CURRENT_ADDRS_GLOBAL_SCOPE" "$FWB_ADDRS" del
}

clear_addresses_except_known_interfaces() {
    $IP link show | sed 's/://g' | awk -v IGNORED="$*" \
        'BEGIN {
           split(IGNORED,ignored_arr);
           for (a in ignored_arr) {ignored_dict[ignored_arr[a]]=1;}
         }
         (/state/ && !($2 in ignored_dict)) {print $2;}' | \
         while read intf; do
            echo "# Removing addresses not configured in fwbuilder from interface $intf"
            $FWBDEBUG $IP addr flush dev $intf scope global
            $FWBDEBUG $IP link set $intf down
         done
}

check_file() {
    test -r "$2" || {
        echo "Can not find file $2 referenced by address table object $1"
        exit 1
    }
}

check_run_time_address_table_files() {
    :
    
}

load_modules() {
    :
    OPTS=$1
    MODULES_DIR="/lib/modules/`uname -r`/kernel/net/"
    MODULES=$(find $MODULES_DIR -name '*conntrack*' \! -name '*ipv6*'|sed  -e 's/^.*\///' -e 's/\([^\.]\)\..*/\1/')
    echo $OPTS | grep -q nat && {
        MODULES="$MODULES $(find $MODULES_DIR -name '*nat*'|sed  -e 's/^.*\///' -e 's/\([^\.]\)\..*/\1/')"
    }
    echo $OPTS | grep -q ipv6 && {
        MODULES="$MODULES $(find $MODULES_DIR -name nf_conntrack_ipv6|sed  -e 's/^.*\///' -e 's/\([^\.]\)\..*/\1/')"
    }
    for module in $MODULES; do 
        if $LSMOD | grep ${module} >/dev/null; then continue; fi
        $MODPROBE ${module} ||  exit 1 
    done
}

verify_interfaces() {
    :
    
}

prolog_commands() {
    echo "Running prolog script"
    
}

epilog_commands() {
    echo "Running epilog script"
    
}

run_epilog_and_exit() {
    epilog_commands
    exit $1
}

configure_interfaces() {
    :
    # Configure interfaces
    update_addresses_of_interface "eth0 192.168.1.22/24" ""
    update_addresses_of_interface "eth1 22.22.23.22/24" ""
    update_addresses_of_interface "eth2 192.168.2.1/24" ""
}

script_body() {
    echo 30 > /proc/sys/net/ipv4/tcp_fin_timeout 
     echo 1800 > /proc/sys/net/ipv4/tcp_keepalive_intvl 


    # ================ IPv4


    # ================ Table 'filter', automatic rules
    # accept established sessions
    $IPTABLES -A INPUT   -m state --state ESTABLISHED,RELATED -j ACCEPT 
    $IPTABLES -A OUTPUT  -m state --state ESTABLISHED,RELATED -j ACCEPT 
    $IPTABLES -A FORWARD -m state --state ESTABLISHED,RELATED -j ACCEPT
    # ================ Table 'mangle', automatic rules
    $IPTABLES -t mangle -A PREROUTING -j CONNMARK --restore-mark
    $IPTABLES -t mangle -A OUTPUT -j CONNMARK --restore-mark

    # ================ Table 'nat',  rule set NAT
    # 
    # Rule 0 (NAT)
    # 
    echo "Rule 0 (NAT)"
    # 
    $IPTABLES -t nat -A POSTROUTING  -s 22.22.23.22  -j ACCEPT
    $IPTABLES -t nat -A POSTROUTING  -s 192.168.1.22  -j ACCEPT
    $IPTABLES -t nat -A POSTROUTING  -s 192.168.2.1  -j ACCEPT
    $IPTABLES -t nat -A OUTPUT  -j ACCEPT
    $IPTABLES -t nat -A POSTROUTING  -s 192.168.1.0/24  -j ACCEPT
    $IPTABLES -t nat -A PREROUTING  -s 192.168.1.0/24  -j ACCEPT

    # ================ Table 'mangle', rule set mymark
    # 
    # Rule mymark 0 (global)
    # 
    echo "Rule mymark 0 (global)"
    # 
    $IPTABLES -N mymark -t mangle
    $IPTABLES -N Cid29866X28575.0 -t mangle
    $IPTABLES -t mangle -A mymark  -d 192.168.2.0/24   -m state --state NEW  -j Cid29866X28575.0
    $IPTABLES -t mangle -A Cid29866X28575.0  -j MARK  --set-mark 16
    $IPTABLES -t mangle -A Cid29866X28575.0  -j ACCEPT
    # 
    # Rule mymark 1 (global)
    # 
    echo "Rule mymark 1 (global)"
    # 
    $IPTABLES -t mangle -A mymark  -j MARK  --set-mark 2
    $IPTABLES -t mangle -A mymark  -j ACCEPT
    # ================ Table 'mangle', rule set Policy
    # 
    # Rule 0 (global)
    # 
    echo "Rule 0 (global)"
    # 
    $IPTABLES -N Cid43BBA6A09745.0 -t mangle
    $IPTABLES -t mangle -A OUTPUT -p 50  -m state --state NEW  -j Cid43BBA6A09745.0
    $IPTABLES -t mangle -A Cid43BBA6A09745.0  -j MARK  --set-mark 16
    $IPTABLES -t mangle -A Cid43BBA6A09745.0  -j ACCEPT
    $IPTABLES -N Cid43BBA6A09745.1 -t mangle
    $IPTABLES -t mangle -A OUTPUT -p ah  -m state --state NEW  -j Cid43BBA6A09745.1
    $IPTABLES -t mangle -A Cid43BBA6A09745.1  -j MARK  --set-mark 16
    $IPTABLES -t mangle -A Cid43BBA6A09745.1  -j ACCEPT
    $IPTABLES -N Cid43BBA6A09745.2 -t mangle
    $IPTABLES -t mangle -A PREROUTING -p 50  -m state --state NEW  -j Cid43BBA6A09745.2
    $IPTABLES -t mangle -A Cid43BBA6A09745.2  -j MARK  --set-mark 16
    $IPTABLES -t mangle -A Cid43BBA6A09745.2  -j ACCEPT
    $IPTABLES -N Cid43BBA6A09745.3 -t mangle
    $IPTABLES -t mangle -A PREROUTING -p ah  -m state --state NEW  -j Cid43BBA6A09745.3
    $IPTABLES -t mangle -A Cid43BBA6A09745.3  -j MARK  --set-mark 16
    $IPTABLES -t mangle -A Cid43BBA6A09745.3  -j ACCEPT
    # 
    # Rule 1 (global)
    # 
    echo "Rule 1 (global)"
    # 
    $IPTABLES -N RULE_1 -t mangle
    $IPTABLES -t mangle -A OUTPUT -p 50  -m state --state NEW  -j RULE_1
    $IPTABLES -t mangle -A OUTPUT -p ah  -m state --state NEW  -j RULE_1
    $IPTABLES -t mangle -A PREROUTING -p 50  -m state --state NEW  -j RULE_1
    $IPTABLES -t mangle -A PREROUTING -p ah  -m state --state NEW  -j RULE_1
    $IPTABLES -t mangle -A RULE_1  -j LOG  --log-level info --log-prefix "RULE 1 -- TAG "
    $IPTABLES -t mangle -A RULE_1  -j MARK  --set-mark 16
    $IPTABLES -t mangle -A RULE_1  -j ACCEPT
    # 
    # Rule 2 (global)
    # 
    echo "Rule 2 (global)"
    # 
    $IPTABLES -N Cid483502D710047.0 -t mangle
    $IPTABLES -t mangle -A OUTPUT -p 50  -m state --state NEW  -j Cid483502D710047.0
    $IPTABLES -t mangle -A Cid483502D710047.0  -j MARK  --set-mark 16
    $IPTABLES -t mangle -A Cid483502D710047.0  -j ACCEPT
    $IPTABLES -N Cid483502D710047.1 -t mangle
    $IPTABLES -t mangle -A OUTPUT -p ah  -m state --state NEW  -j Cid483502D710047.1
    $IPTABLES -t mangle -A Cid483502D710047.1  -j MARK  --set-mark 16
    $IPTABLES -t mangle -A Cid483502D710047.1  -j ACCEPT
    # 
    # Rule 3 (eth1)
    # 
    echo "Rule 3 (eth1)"
    # 
    $IPTABLES -N Cid30009X2275.0 -t mangle
    $IPTABLES -t mangle -A OUTPUT -o eth1  -p 50  -m state --state NEW  -j Cid30009X2275.0
    $IPTABLES -t mangle -A Cid30009X2275.0  -j MARK  --set-mark 16
    $IPTABLES -t mangle -A Cid30009X2275.0  -j ACCEPT
    $IPTABLES -N Cid30009X2275.1 -t mangle
    $IPTABLES -t mangle -A OUTPUT -o eth1  -p ah  -m state --state NEW  -j Cid30009X2275.1
    $IPTABLES -t mangle -A Cid30009X2275.1  -j MARK  --set-mark 16
    $IPTABLES -t mangle -A Cid30009X2275.1  -j ACCEPT
    # 
    # Rule 4 (global)
    # 
    echo "Rule 4 (global)"
    # 
    $IPTABLES -N RULE_4 -t mangle
    $IPTABLES -t mangle -A OUTPUT -p 50  -m state --state NEW  -j RULE_4
    $IPTABLES -t mangle -A OUTPUT -p ah  -m state --state NEW  -j RULE_4
    $IPTABLES -t mangle -A RULE_4  -j LOG  --log-level info --log-prefix "RULE 4 -- TAG "
    $IPTABLES -t mangle -A RULE_4  -j MARK  --set-mark 16
    $IPTABLES -t mangle -A RULE_4  -j ACCEPT
    # 
    # Rule 5 (eth1)
    # 
    echo "Rule 5 (eth1)"
    # 
    $IPTABLES -N Cid43501X5007.0 -t mangle
    $IPTABLES -t mangle -A OUTPUT -o eth1   -s 22.22.23.22   -m state --state NEW  -j Cid43501X5007.0
    $IPTABLES -N Cid43501X5007.1 -t mangle
    $IPTABLES -t mangle -A Cid43501X5007.0 -p 50  -j Cid43501X5007.1
    $IPTABLES -t mangle -A Cid43501X5007.1  -j MARK  --set-mark 16
    $IPTABLES -t mangle -A Cid43501X5007.1  -j ACCEPT
    $IPTABLES -N Cid43501X5007.2 -t mangle
    $IPTABLES -t mangle -A Cid43501X5007.0 -p ah  -j Cid43501X5007.2
    $IPTABLES -t mangle -A Cid43501X5007.2  -j MARK  --set-mark 16
    $IPTABLES -t mangle -A Cid43501X5007.2  -j ACCEPT
    # 
    # Rule 6 (eth1)
    # 
    echo "Rule 6 (eth1)"
    # 
    $IPTABLES -N Cid43518X5007.0 -t mangle
    $IPTABLES -t mangle -A OUTPUT -o eth1   -s 22.22.23.22   -m state --state NEW  -j Cid43518X5007.0
    $IPTABLES -N Cid43518X5007.1 -t mangle
    $IPTABLES -t mangle -A Cid43518X5007.0 -p 50  -j Cid43518X5007.1
    $IPTABLES -t mangle -A Cid43518X5007.1  -j MARK  --set-mark 16
    $IPTABLES -t mangle -A Cid43518X5007.1  -j ACCEPT
    $IPTABLES -N Cid43518X5007.2 -t mangle
    $IPTABLES -t mangle -A Cid43518X5007.0 -p ah  -j Cid43518X5007.2
    $IPTABLES -t mangle -A Cid43518X5007.2  -j MARK  --set-mark 16
    $IPTABLES -t mangle -A Cid43518X5007.2  -j ACCEPT
    # 
    # Rule 7 (eth1)
    # 
    echo "Rule 7 (eth1)"
    # 
    $IPTABLES -N Cid43535X5007.0 -t mangle
    $IPTABLES -t mangle -A OUTPUT -o eth1  -p 50  -m state --state NEW  -j Cid43535X5007.0
    $IPTABLES -t mangle -A Cid43535X5007.0  -j MARK  --set-mark 16
    $IPTABLES -t mangle -A Cid43535X5007.0  -j ACCEPT
    $IPTABLES -N Cid43535X5007.1 -t mangle
    $IPTABLES -t mangle -A OUTPUT -o eth1  -p ah  -m state --state NEW  -j Cid43535X5007.1
    $IPTABLES -t mangle -A Cid43535X5007.1  -j MARK  --set-mark 16
    $IPTABLES -t mangle -A Cid43535X5007.1  -j ACCEPT
    # 
    # Rule 8 (eth1)
    # 
    echo "Rule 8 (eth1)"
    # 
    $IPTABLES -N Cid43554X5007.0 -t mangle
    $IPTABLES -t mangle -A OUTPUT -o eth1   -s 22.22.23.22   -j Cid43554X5007.0
    $IPTABLES -N Cid43554X5007.1 -t mangle
    $IPTABLES -t mangle -A Cid43554X5007.0 -p 50  -j Cid43554X5007.1
    $IPTABLES -t mangle -A Cid43554X5007.1  -j MARK  --set-mark 16
    $IPTABLES -t mangle -A Cid43554X5007.1  -j ACCEPT
    $IPTABLES -N Cid43554X5007.2 -t mangle
    $IPTABLES -t mangle -A Cid43554X5007.0 -p ah  -j Cid43554X5007.2
    $IPTABLES -t mangle -A Cid43554X5007.2  -j MARK  --set-mark 16
    $IPTABLES -t mangle -A Cid43554X5007.2  -j ACCEPT
    # 
    # Rule 9 (eth1)
    # 
    echo "Rule 9 (eth1)"
    # 
    $IPTABLES -N Cid43571X5007.0 -t mangle
    $IPTABLES -t mangle -A OUTPUT -o eth1   -s 22.22.23.22   -j Cid43571X5007.0
    $IPTABLES -N Cid43571X5007.1 -t mangle
    $IPTABLES -t mangle -A Cid43571X5007.0 -p 50  -j Cid43571X5007.1
    $IPTABLES -t mangle -A Cid43571X5007.1  -j MARK  --set-mark 16
    $IPTABLES -t mangle -A Cid43571X5007.1  -j ACCEPT
    $IPTABLES -N Cid43571X5007.2 -t mangle
    $IPTABLES -t mangle -A Cid43571X5007.0 -p ah  -j Cid43571X5007.2
    $IPTABLES -t mangle -A Cid43571X5007.2  -j MARK  --set-mark 16
    $IPTABLES -t mangle -A Cid43571X5007.2  -j ACCEPT
    # 
    # Rule 10 (eth1)
    # 
    echo "Rule 10 (eth1)"
    # 
    $IPTABLES -N Cid43588X5007.0 -t mangle
    $IPTABLES -t mangle -A OUTPUT -o eth1  -p 50  -j Cid43588X5007.0
    $IPTABLES -t mangle -A Cid43588X5007.0  -j MARK  --set-mark 16
    $IPTABLES -t mangle -A Cid43588X5007.0  -j ACCEPT
    $IPTABLES -N Cid43588X5007.1 -t mangle
    $IPTABLES -t mangle -A OUTPUT -o eth1  -p ah  -j Cid43588X5007.1
    $IPTABLES -t mangle -A Cid43588X5007.1  -j MARK  --set-mark 16
    $IPTABLES -t mangle -A Cid43588X5007.1  -j ACCEPT
    # 
    # Rule 11 (global)
    # 
    echo "Rule 11 (global)"
    # 
    $IPTABLES -N Cid43BBCC139745.0 -t mangle
    $IPTABLES -t mangle -A OUTPUT -p 50  -m state --state NEW  -j Cid43BBCC139745.0
    $IPTABLES -t mangle -A OUTPUT -p ah  -m state --state NEW  -j Cid43BBCC139745.0
    $IPTABLES -t mangle -A PREROUTING -p 50  -m state --state NEW  -j Cid43BBCC139745.0
    $IPTABLES -t mangle -A PREROUTING -p ah  -m state --state NEW  -j Cid43BBCC139745.0
    $IPTABLES -t mangle -A Cid43BBCC139745.0  -s 192.168.1.0/24   -j RETURN
    $IPTABLES -t mangle -A Cid43BBCC139745.0  -s 192.168.2.0/24   -j RETURN
    $IPTABLES -N RULE_11_3 -t mangle
    $IPTABLES -t mangle -A Cid43BBCC139745.0  -j RULE_11_3
    $IPTABLES -t mangle -A RULE_11_3  -j LOG  --log-level info --log-prefix "RULE 11 -- TAG "
    $IPTABLES -t mangle -A RULE_11_3  -j MARK  --set-mark 16
    $IPTABLES -t mangle -A RULE_11_3  -j ACCEPT
    # 
    # Rule 12 (eth1)
    # 
    echo "Rule 12 (eth1)"
    # 
    $IPTABLES -N Cid4665E24F7765.0 -t mangle
    $IPTABLES -t mangle -A PREROUTING -i eth1  -p 50  -m state --state NEW  -j Cid4665E24F7765.0
    $IPTABLES -t mangle -A Cid4665E24F7765.0  -j MARK  --set-mark 16
    $IPTABLES -t mangle -A Cid4665E24F7765.0  -j ACCEPT
    $IPTABLES -N Cid4665E24F7765.1 -t mangle
    $IPTABLES -t mangle -A PREROUTING -i eth1  -p ah  -m state --state NEW  -j Cid4665E24F7765.1
    $IPTABLES -t mangle -A Cid4665E24F7765.1  -j MARK  --set-mark 16
    $IPTABLES -t mangle -A Cid4665E24F7765.1  -j ACCEPT
    $IPTABLES -N Cid4665E24F7765.2 -t mangle
    $IPTABLES -t mangle -A OUTPUT -o eth1  -p 50  -m state --state NEW  -j Cid4665E24F7765.2
    $IPTABLES -t mangle -A Cid4665E24F7765.2  -j MARK  --set-mark 16
    $IPTABLES -t mangle -A Cid4665E24F7765.2  -j ACCEPT
    $IPTABLES -N Cid4665E24F7765.3 -t mangle
    $IPTABLES -t mangle -A OUTPUT -o eth1  -p ah  -m state --state NEW  -j Cid4665E24F7765.3
    $IPTABLES -t mangle -A Cid4665E24F7765.3  -j MARK  --set-mark 16
    $IPTABLES -t mangle -A Cid4665E24F7765.3  -j ACCEPT
    $IPTABLES -N Cid4665E24F7765.4 -t mangle
    $IPTABLES -t mangle -A POSTROUTING -o eth1  -p 50  -m state --state NEW  -j Cid4665E24F7765.4
    $IPTABLES -t mangle -A Cid4665E24F7765.4  -j MARK  --set-mark 16
    $IPTABLES -t mangle -A Cid4665E24F7765.4  -j ACCEPT
    $IPTABLES -N Cid4665E24F7765.5 -t mangle
    $IPTABLES -t mangle -A POSTROUTING -o eth1  -p ah  -m state --state NEW  -j Cid4665E24F7765.5
    $IPTABLES -t mangle -A Cid4665E24F7765.5  -j MARK  --set-mark 16
    $IPTABLES -t mangle -A Cid4665E24F7765.5  -j ACCEPT
    # 
    # Rule 13 (eth1)
    # 
    echo "Rule 13 (eth1)"
    # 
    $IPTABLES -N Cid43BBCC3D9745.0 -t mangle
    $IPTABLES -t mangle -A PREROUTING -i eth1  -p 50  -m state --state NEW  -j Cid43BBCC3D9745.0
    $IPTABLES -t mangle -A Cid43BBCC3D9745.0  -j MARK  --set-mark 16
    $IPTABLES -t mangle -A Cid43BBCC3D9745.0  -j ACCEPT
    $IPTABLES -N Cid43BBCC3D9745.1 -t mangle
    $IPTABLES -t mangle -A PREROUTING -i eth1  -p ah  -m state --state NEW  -j Cid43BBCC3D9745.1
    $IPTABLES -t mangle -A Cid43BBCC3D9745.1  -j MARK  --set-mark 16
    $IPTABLES -t mangle -A Cid43BBCC3D9745.1  -j ACCEPT
    # 
    # Rule 14 (eth1)
    # 
    echo "Rule 14 (eth1)"
    # 
    $IPTABLES -N Cid459E471C10946.0 -t mangle
    $IPTABLES -t mangle -A OUTPUT -o eth1  -p 50  -m state --state NEW  -j Cid459E471C10946.0
    $IPTABLES -t mangle -A Cid459E471C10946.0  -j MARK  --set-mark 16
    $IPTABLES -t mangle -A Cid459E471C10946.0  -j ACCEPT
    $IPTABLES -N Cid459E471C10946.1 -t mangle
    $IPTABLES -t mangle -A OUTPUT -o eth1  -p ah  -m state --state NEW  -j Cid459E471C10946.1
    $IPTABLES -t mangle -A Cid459E471C10946.1  -j MARK  --set-mark 16
    $IPTABLES -t mangle -A Cid459E471C10946.1  -j ACCEPT
    $IPTABLES -N Cid459E471C10946.2 -t mangle
    $IPTABLES -t mangle -A POSTROUTING -o eth1  -p 50  -m state --state NEW  -j Cid459E471C10946.2
    $IPTABLES -t mangle -A Cid459E471C10946.2  -j MARK  --set-mark 16
    $IPTABLES -t mangle -A Cid459E471C10946.2  -j ACCEPT
    $IPTABLES -N Cid459E471C10946.3 -t mangle
    $IPTABLES -t mangle -A POSTROUTING -o eth1  -p ah  -m state --state NEW  -j Cid459E471C10946.3
    $IPTABLES -t mangle -A Cid459E471C10946.3  -j MARK  --set-mark 16
    $IPTABLES -t mangle -A Cid459E471C10946.3  -j ACCEPT
    # 
    # Rule 15 (global)
    # 
    echo "Rule 15 (global)"
    # 
    # using CONNMARK
    $IPTABLES -N RULE_15 -t mangle
    $IPTABLES -t mangle -A OUTPUT -p 50  -m state --state NEW  -j RULE_15
    $IPTABLES -t mangle -A OUTPUT -p ah  -m state --state NEW  -j RULE_15
    $IPTABLES -t mangle -A PREROUTING -p 50  -m state --state NEW  -j RULE_15
    $IPTABLES -t mangle -A PREROUTING -p ah  -m state --state NEW  -j RULE_15
    $IPTABLES -t mangle -A RULE_15  -j MARK  --set-mark 10
    $IPTABLES -t mangle -A RULE_15  -j CONNMARK --save-mark
    $IPTABLES -t mangle -A RULE_15  -j ACCEPT
    # 
    # Rule 16 (global)
    # 
    echo "Rule 16 (global)"
    # 
    # using CONNMARK
    $IPTABLES -N RULE_16 -t mangle
    $IPTABLES -t mangle -A OUTPUT -p 50  -m state --state NEW  -j RULE_16
    $IPTABLES -t mangle -A OUTPUT -p ah  -m state --state NEW  -j RULE_16
    $IPTABLES -t mangle -A PREROUTING -p 50  -m state --state NEW  -j RULE_16
    $IPTABLES -t mangle -A PREROUTING -p ah  -m state --state NEW  -j RULE_16
    $IPTABLES -t mangle -A RULE_16  -j LOG  --log-level info --log-prefix "RULE 16 -- TAG "
    $IPTABLES -t mangle -A RULE_16  -j MARK  --set-mark 10
    $IPTABLES -t mangle -A RULE_16  -j CONNMARK --save-mark
    $IPTABLES -t mangle -A RULE_16  -j ACCEPT
    # 
    # Rule 17 (global)
    # 
    echo "Rule 17 (global)"
    # 
    # using CONNMARK
    $IPTABLES -N Cid4483A4DF1810.0 -t mangle
    $IPTABLES -t mangle -A OUTPUT -p 50  -m state --state NEW  -j Cid4483A4DF1810.0
    $IPTABLES -t mangle -A OUTPUT -p ah  -m state --state NEW  -j Cid4483A4DF1810.0
    $IPTABLES -t mangle -A PREROUTING -p 50  -m state --state NEW  -j Cid4483A4DF1810.0
    $IPTABLES -t mangle -A PREROUTING -p ah  -m state --state NEW  -j Cid4483A4DF1810.0
    $IPTABLES -t mangle -A Cid4483A4DF1810.0  -s 192.168.1.0/24   -j RETURN
    $IPTABLES -t mangle -A Cid4483A4DF1810.0  -s 192.168.2.0/24   -j RETURN
    $IPTABLES -N RULE_17 -t mangle
    $IPTABLES -t mangle -A Cid4483A4DF1810.0  -j RULE_17
    $IPTABLES -t mangle -A RULE_17  -j LOG  --log-level info --log-prefix "RULE 17 -- TAG "
    $IPTABLES -t mangle -A RULE_17  -j MARK  --set-mark 10
    $IPTABLES -t mangle -A RULE_17  -j CONNMARK --save-mark
    $IPTABLES -t mangle -A RULE_17  -j ACCEPT
    # 
    # Rule 18 (eth1)
    # 
    echo "Rule 18 (eth1)"
    # 
    # using CONNMARK
    $IPTABLES -N In_RULE_18 -t mangle
    $IPTABLES -t mangle -A PREROUTING -i eth1  -p 50  -m state --state NEW  -j In_RULE_18
    $IPTABLES -t mangle -A PREROUTING -i eth1  -p ah  -m state --state NEW  -j In_RULE_18
    $IPTABLES -t mangle -A In_RULE_18 -i eth1   -j MARK  --set-mark 10
    $IPTABLES -t mangle -A In_RULE_18 -i eth1   -j CONNMARK --save-mark
    $IPTABLES -t mangle -A In_RULE_18 -i eth1   -j ACCEPT
    # 
    # Rule 19 (eth1)
    # 
    echo "Rule 19 (eth1)"
    # 
    # using CONNMARK
    $IPTABLES -N Out_RULE_19 -t mangle
    $IPTABLES -t mangle -A OUTPUT -o eth1  -p 50  -m state --state NEW  -j Out_RULE_19
    $IPTABLES -t mangle -A OUTPUT -o eth1  -p ah  -m state --state NEW  -j Out_RULE_19
    $IPTABLES -t mangle -A POSTROUTING -o eth1  -p 50  -m state --state NEW  -j Out_RULE_19
    $IPTABLES -t mangle -A POSTROUTING -o eth1  -p ah  -m state --state NEW  -j Out_RULE_19
    $IPTABLES -t mangle -A Out_RULE_19 -o eth1   -j MARK  --set-mark 10
    $IPTABLES -t mangle -A Out_RULE_19 -o eth1   -j CONNMARK --save-mark
    $IPTABLES -t mangle -A Out_RULE_19 -o eth1   -j ACCEPT
    # 
    # Rule 22 (global)
    # 
    echo "Rule 22 (global)"
    # 
    $IPTABLES -N Cid43BB81879745.0 -t mangle
    $IPTABLES -t mangle -A POSTROUTING  -s 192.168.1.0/24   -j Cid43BB81879745.0
    $IPTABLES -t mangle -A Cid43BB81879745.0  -j CLASSIFY  --set-class 1:2
    $IPTABLES -t mangle -A Cid43BB81879745.0  -j ACCEPT
    # 
    # Rule 23 (global)
    # 
    echo "Rule 23 (global)"
    # 
    $IPTABLES -N RULE_23 -t mangle
    $IPTABLES -t mangle -A POSTROUTING  -s 192.168.1.0/24   -j RULE_23
    $IPTABLES -t mangle -A RULE_23  -j LOG  --log-level info --log-prefix "RULE 23 -- CLASSIFY "
    $IPTABLES -t mangle -A RULE_23  -j CLASSIFY  --set-class 1:2
    $IPTABLES -t mangle -A RULE_23  -j ACCEPT
    # 
    # Rule 24 (global)
    # 
    echo "Rule 24 (global)"
    # 
    $IPTABLES -N Cid451E56936383.0 -t mangle
    $IPTABLES -t mangle -A POSTROUTING  -j Cid451E56936383.0
    $IPTABLES -t mangle -A Cid451E56936383.0  -s 192.168.1.0/24   -j RETURN
    $IPTABLES -t mangle -A Cid451E56936383.0  -s 192.168.2.0/24   -j RETURN
    $IPTABLES -t mangle -A Cid451E56936383.0  -j CLASSIFY  --set-class 1:2
    $IPTABLES -t mangle -A Cid451E56936383.0  -j ACCEPT
    # 
    # Rule 25 (global)
    # 
    echo "Rule 25 (global)"
    # 
    $IPTABLES -N Cid451E56A46383.0 -t mangle
    $IPTABLES -t mangle -A POSTROUTING  -j Cid451E56A46383.0
    $IPTABLES -t mangle -A Cid451E56A46383.0  -s 192.168.1.0/24   -j RETURN
    $IPTABLES -t mangle -A Cid451E56A46383.0  -s 192.168.2.0/24   -j RETURN
    $IPTABLES -N RULE_25_3 -t mangle
    $IPTABLES -t mangle -A Cid451E56A46383.0  -j RULE_25_3
    $IPTABLES -t mangle -A RULE_25_3  -j LOG  --log-level info --log-prefix "RULE 25 -- CLASSIFY "
    $IPTABLES -t mangle -A RULE_25_3  -j CLASSIFY  --set-class 1:2
    $IPTABLES -t mangle -A RULE_25_3  -j ACCEPT
    # 
    # Rule 26 (eth1)
    # 
    echo "Rule 26 (eth1)"
    # 
    $IPTABLES -N Cid451EAD596383.0 -t mangle
    $IPTABLES -t mangle -A POSTROUTING -o eth1   -s 192.168.1.0/24   -j Cid451EAD596383.0
    $IPTABLES -t mangle -A Cid451EAD596383.0  -j CLASSIFY  --set-class 1:2
    $IPTABLES -t mangle -A Cid451EAD596383.0  -j ACCEPT
    # 
    # Rule 27 (eth1)
    # 
    echo "Rule 27 (eth1)"
    # 
    $IPTABLES -N Out_RULE_27 -t mangle
    $IPTABLES -t mangle -A POSTROUTING -o eth1   -s 192.168.1.0/24   -j Out_RULE_27
    $IPTABLES -t mangle -A Out_RULE_27  -j LOG  --log-level info --log-prefix "RULE 27 -- CLASSIFY "
    $IPTABLES -t mangle -A Out_RULE_27  -j CLASSIFY  --set-class 1:2
    $IPTABLES -t mangle -A Out_RULE_27  -j ACCEPT
    # 
    # Rule 28 (eth1)
    # 
    echo "Rule 28 (eth1)"
    # 
    $IPTABLES -N Cid451ED8E76383.0 -t mangle
    $IPTABLES -t mangle -A POSTROUTING -o ! eth1   -s 192.168.1.0/24   -j Cid451ED8E76383.0
    $IPTABLES -t mangle -A Cid451ED8E76383.0  -j CLASSIFY  --set-class 1:2
    $IPTABLES -t mangle -A Cid451ED8E76383.0  -j ACCEPT
    # 
    # Rule 29 (eth1)
    # 
    echo "Rule 29 (eth1)"
    # 
    $IPTABLES -N Out_RULE_29 -t mangle
    $IPTABLES -t mangle -A POSTROUTING -o ! eth1   -s 192.168.1.0/24   -j Out_RULE_29
    $IPTABLES -t mangle -A Out_RULE_29  -j LOG  --log-level info --log-prefix "RULE 29 -- CLASSIFY "
    $IPTABLES -t mangle -A Out_RULE_29  -j CLASSIFY  --set-class 1:2
    $IPTABLES -t mangle -A Out_RULE_29  -j ACCEPT
    # 
    # Rule 30 (global)
    # 
    echo "Rule 30 (global)"
    # 
    # testing for bug #1618381
    # classify action is non-terminating
    # in this firewall object
    $IPTABLES -N Cid4599A9DC19324.0 -t mangle
    $IPTABLES -t mangle -A POSTROUTING -p icmp  -m icmp  --icmp-type 3  -j Cid4599A9DC19324.0
    $IPTABLES -t mangle -A Cid4599A9DC19324.0  -j CLASSIFY  --set-class 1:10
    $IPTABLES -t mangle -A Cid4599A9DC19324.0  -j ACCEPT
    # 
    # Rule 31 (eth0)
    # 
    echo "Rule 31 (eth0)"
    # 
    # second rule for bug #1618381
    $IPTABLES -N Cid4599A9E919324.0 -t mangle
    $IPTABLES -t mangle -A POSTROUTING -o eth0   -j Cid4599A9E919324.0
    $IPTABLES -t mangle -A Cid4599A9E919324.0  -j CLASSIFY  --set-class 1:11
    $IPTABLES -t mangle -A Cid4599A9E919324.0  -j ACCEPT
    # 
    # Rule 32 (global)
    # 
    echo "Rule 32 (global)"
    # 
    # testing for bug #1618381
    $IPTABLES -N Cid459A026219324.0 -t mangle
    $IPTABLES -t mangle -A POSTROUTING -p icmp  -m icmp  --icmp-type 3  -j Cid459A026219324.0
    $IPTABLES -t mangle -A Cid459A026219324.0  -s 192.168.1.0/24   -j RETURN
    $IPTABLES -t mangle -A Cid459A026219324.0  -s 192.168.2.0/24   -j RETURN
    $IPTABLES -t mangle -A Cid459A026219324.0  -j CLASSIFY  --set-class 1:10
    $IPTABLES -t mangle -A Cid459A026219324.0  -j ACCEPT
    # 
    # Rule 33 (global)
    # 
    echo "Rule 33 (global)"
    # 
    # testing for bug #1618381
    $IPTABLES -N Cid459A5AFB19324.0 -t mangle
    $IPTABLES -t mangle -A POSTROUTING -p icmp  -m icmp  --icmp-type 3  -j Cid459A5AFB19324.0
    $IPTABLES -t mangle -A POSTROUTING -p tcp -m tcp  --dport 80  -j Cid459A5AFB19324.0
    $IPTABLES -t mangle -A Cid459A5AFB19324.0  -s 192.168.1.0/24   -j RETURN
    $IPTABLES -t mangle -A Cid459A5AFB19324.0  -s 192.168.2.0/24   -j RETURN
    $IPTABLES -t mangle -A Cid459A5AFB19324.0  -j CLASSIFY  --set-class 1:10
    $IPTABLES -t mangle -A Cid459A5AFB19324.0  -j ACCEPT
    # 
    # Rule 34 (eth0)
    # 
    echo "Rule 34 (eth0)"
    # 
    # bug #1618381
    # this rule uses multiport
    # and has to be split because
    # of that
    $IPTABLES -N Cid459A875F19324.0 -t mangle
    $IPTABLES -t mangle -A POSTROUTING -o eth0  -p tcp -m tcp  --dport 10000:11000  -j Cid459A875F19324.0
    $IPTABLES -t mangle -A Cid459A875F19324.0  -j CLASSIFY  --set-class 1:11
    $IPTABLES -t mangle -A Cid459A875F19324.0  -j ACCEPT
    $IPTABLES -N Cid459A875F19324.1 -t mangle
    $IPTABLES -t mangle -A POSTROUTING -o eth0  -p tcp -m tcp  -m multiport  --dports 113,13,53,2105,21,70,80,443,6667,119,25,3128,22,23,540  -j Cid459A875F19324.1
    $IPTABLES -t mangle -A Cid459A875F19324.1  -j CLASSIFY  --set-class 1:11
    $IPTABLES -t mangle -A Cid459A875F19324.1  -j ACCEPT
    $IPTABLES -N Cid459A875F19324.2 -t mangle
    $IPTABLES -t mangle -A POSTROUTING -o eth0  -p udp -m udp  -m multiport  --dports 53,161  -j Cid459A875F19324.2
    $IPTABLES -t mangle -A Cid459A875F19324.2  -j CLASSIFY  --set-class 1:11
    $IPTABLES -t mangle -A Cid459A875F19324.2  -j ACCEPT
    # 
    # Rule 36 (global)
    # 
    echo "Rule 36 (global)"
    # 
    $IPTABLES -N RULE_36 -t mangle
    $IPTABLES -t mangle -A PREROUTING  -j RULE_36
    $IPTABLES -t mangle -A RULE_36  -j LOG  --log-level info --log-prefix "RULE 36 -- BRANCH "
    $IPTABLES -t mangle -A RULE_36  -j mymark
    $IPTABLES -t mangle -A POSTROUTING  -j RULE_36
    $IPTABLES -t mangle -A FORWARD  -j RULE_36
    # ================ Table 'mangle', rule set mangle_rules
    # 
    # Rule mangle_rules 0 (global)
    # 
    echo "Rule mangle_rules 0 (global)"
    # 
    $IPTABLES -t mangle -A OUTPUT -m mark ! --mark 0  -m state --state NEW  -j ACCEPT
    $IPTABLES -t mangle -A INPUT -m mark ! --mark 0  -m state --state NEW  -j ACCEPT
    $IPTABLES -t mangle -A PREROUTING -m mark ! --mark 0  -m state --state NEW  -j ACCEPT
    # 
    # Rule mangle_rules 1 (global)
    # 
    echo "Rule mangle_rules 1 (global)"
    # 
    $IPTABLES -N mangle_rules_1 -t mangle
    $IPTABLES -t mangle -A OUTPUT -p tcp -m tcp  --dport 80  -m state --state NEW  -j mangle_rules_1
    $IPTABLES -t mangle -A PREROUTING -p tcp -m tcp  --dport 80  -m state --state NEW  -j mangle_rules_1
    $IPTABLES -t mangle -A mangle_rules_1  -j MARK  --set-mark 1
    $IPTABLES -t mangle -A mangle_rules_1  -j CONNMARK --save-mark
    $IPTABLES -t mangle -A mangle_rules_1  -j ACCEPT
    # 
    # Rule mangle_rules 2 (global)
    # 
    echo "Rule mangle_rules 2 (global)"
    # 
    $IPTABLES -N Cid56817X29169.0 -t mangle
    $IPTABLES -t mangle -A POSTROUTING -m mark --mark 1  -j Cid56817X29169.0
    $IPTABLES -t mangle -A Cid56817X29169.0  -j CLASSIFY  --set-class 1:12
    $IPTABLES -t mangle -A Cid56817X29169.0  -j ACCEPT
    # 
    # Rule mangle_rules 4 (global)
    # 
    echo "Rule mangle_rules 4 (global)"
    # 
    # firewall37:mangle_rules:4: error: DNSName object "6bone.net (ct)" (compile time) can not resolve dns name "6bone.net" (AF_INET): Host or network '6bone.net' not found; last error: Unknown error Using dummy address in test mode

    $IPTABLES -t mangle -A INPUT  -s 192.0.2.1  -m mark --mark 1  -m state --state NEW  -j ACCEPT
    $IPTABLES -t mangle -A PREROUTING  -s 192.0.2.1  -m mark --mark 1  -m state --state NEW  -j ACCEPT
    # 
    # Rule mangle_rules 5 (global)
    # 
    echo "Rule mangle_rules 5 (global)"
    # 
    $IPTABLES -t mangle -A INPUT  -s 6bone.net -m mark --mark 1  -m state --state NEW  -j ACCEPT
    $IPTABLES -t mangle -A PREROUTING  -s 6bone.net -m mark --mark 1  -m state --state NEW  -j ACCEPT
    # 
    # Rule mangle_rules 6 (global)
    # 
    echo "Rule mangle_rules 6 (global)"
    # 
    $IPTABLES -N Cid122277X13558.0 -t mangle
    $IPTABLES -t mangle -A INPUT -m mark --mark 1  -m state --state NEW  -j Cid122277X13558.0
    $IPTABLES -t mangle -A Cid122277X13558.0  -s 6bone.net  -j ACCEPT
    $IPTABLES -t mangle -A Cid122277X13558.0  -s ny6ix.net  -j ACCEPT
    $IPTABLES -N Cid122277X13558.1 -t mangle
    $IPTABLES -t mangle -A PREROUTING -m mark --mark 1  -m state --state NEW  -j Cid122277X13558.1
    $IPTABLES -t mangle -A Cid122277X13558.1  -s 6bone.net  -j ACCEPT
    $IPTABLES -t mangle -A Cid122277X13558.1  -s ny6ix.net  -j ACCEPT
    # 
    # Rule mangle_rules 8 (global)
    # 
    echo "Rule mangle_rules 8 (global)"
    # 
    $IPTABLES -t mangle -A OUTPUT -m mark --mark 1  -m state --state NEW  -j ACCEPT
    # 
    # Rule mangle_rules 9 (global)
    # 
    echo "Rule mangle_rules 9 (global)"
    # 
    $IPTABLES -t mangle -A OUTPUT  -s 22.22.23.22  -m mark --mark 1  -m state --state NEW  -j ACCEPT
    # 
    # Rule mangle_rules 10 (global)
    # 
    echo "Rule mangle_rules 10 (global)"
    # 
    $IPTABLES -N Cid207332X13558.0 -t mangle
    $IPTABLES -t mangle -A OUTPUT -m mark --mark 1  -m state --state NEW  -j Cid207332X13558.0
    $IPTABLES -t mangle -A Cid207332X13558.0  -d 22.22.23.22   -j ACCEPT
    $IPTABLES -t mangle -A Cid207332X13558.0  -d 192.168.1.22   -j ACCEPT
    $IPTABLES -t mangle -A Cid207332X13558.0  -d 192.168.2.1   -j ACCEPT
    $IPTABLES -t mangle -A INPUT -m mark --mark 1  -m state --state NEW  -j ACCEPT
    # 
    # Rule mangle_rules 11 (global)
    # 
    echo "Rule mangle_rules 11 (global)"
    # 
    $IPTABLES -t mangle -A PREROUTING -i +   -s ! 192.168.1.0/24  -m mark --mark 1  -m state --state NEW  -j ACCEPT
    # 
    # Rule mangle_rules 12 (global)
    # 
    echo "Rule mangle_rules 12 (global)"
    # 
    $IPTABLES -t mangle -A PREROUTING -i +   -s ! 1.1.1.1  -m mark --mark 1  -m state --state NEW  -j ACCEPT
    # 
    # Rule mangle_rules 13 (global)
    # 
    echo "Rule mangle_rules 13 (global)"
    # 
    # firewall37:mangle_rules:13: error: DNSName object "6bone.net (ct)" (compile time) can not resolve dns name "6bone.net" (AF_INET): Host or network '6bone.net' not found; last error: Unknown error Using dummy address in test mode

    $IPTABLES -N Cid480281X13558.0 -t mangle
    $IPTABLES -t mangle -A PREROUTING -i +  -m mark --mark 1  -m state --state NEW  -j Cid480281X13558.0
    $IPTABLES -t mangle -A Cid480281X13558.0  -s 192.0.2.1   -j RETURN
    $IPTABLES -t mangle -A Cid480281X13558.0  -j ACCEPT
    # 
    # Rule mangle_rules 14 (global)
    # 
    echo "Rule mangle_rules 14 (global)"
    # 
    $IPTABLES -N Cid480300X13558.0 -t mangle
    $IPTABLES -t mangle -A PREROUTING -i +  -m mark --mark 1  -m state --state NEW  -j Cid480300X13558.0
    $IPTABLES -t mangle -A Cid480300X13558.0  -s 6bone.net  -j RETURN
    $IPTABLES -t mangle -A Cid480300X13558.0  -j ACCEPT
    # 
    # Rule mangle_rules 15 (global)
    # 
    echo "Rule mangle_rules 15 (global)"
    # 
    # rules in mangle-only ruleset with action
    # Accept normally go to PREROUTING,
    # but if direction is set to outbound,
    # they go to POSTROUTING. This is just
    # a convention since there is no better
    # criteria as to how to tell the compiler
    # that such rule should be placed in
    # POSTROUTING.
    $IPTABLES -N Cid43052X80179.0 -t mangle
    $IPTABLES -t mangle -A POSTROUTING -o +  -m mark --mark 1  -m state --state NEW  -j Cid43052X80179.0
    $IPTABLES -t mangle -A Cid43052X80179.0  -s 6bone.net  -j ACCEPT
    $IPTABLES -t mangle -A Cid43052X80179.0  -s ny6ix.net  -j ACCEPT

    # ================ Table 'filter', rule set Policy
    # 
    # Rule 20 (global)
    # 
    echo "Rule 20 (global)"
    # 
    # tag 0 matches packet that has not been marked yet.
    $IPTABLES -A OUTPUT -m mark ! --mark 0  -m state --state NEW  -j ACCEPT
    $IPTABLES -A INPUT -m mark ! --mark 0  -m state --state NEW  -j ACCEPT
    $IPTABLES -A FORWARD -m mark ! --mark 0  -m state --state NEW  -j ACCEPT
    # 
    # Rule 21 (global)
    # 
    echo "Rule 21 (global)"
    # 
    $IPTABLES -A OUTPUT -p tcp -m tcp  -d 192.168.2.10   --dport 80  -j QUEUE
    $IPTABLES -A FORWARD -p tcp -m tcp  -d 192.168.2.10   --dport 80  -j QUEUE
    # 
    # Rule 35 (global)
    # 
    echo "Rule 35 (global)"
    # 
    $IPTABLES -A INPUT  -s 192.168.1.0/24   -j TCPMSS --set-mss 1400
    $IPTABLES -A OUTPUT  -s 192.168.1.0/24   -j TCPMSS --set-mss 1400
    $IPTABLES -A FORWARD  -s 192.168.1.0/24   -j TCPMSS --set-mss 1400
    # 
    # Rule 36 (global)
    # 
    echo "Rule 36 (global)"
    # 
    $IPTABLES -N RULE_36
    $IPTABLES -A OUTPUT  -j RULE_36
    $IPTABLES -A INPUT  -j RULE_36
    $IPTABLES -A FORWARD  -j RULE_36
    $IPTABLES -A RULE_36  -j LOG  --log-level info --log-prefix "RULE 36 -- BRANCH "
    $IPTABLES -N mymark
    $IPTABLES -A RULE_36  -j mymark
    # 
    # Rule 37 (global)
    # 
    echo "Rule 37 (global)"
    # 
    $IPTABLES -N RULE_37
    $IPTABLES -A OUTPUT  -j RULE_37
    $IPTABLES -A INPUT  -j RULE_37
    $IPTABLES -A FORWARD  -j RULE_37
    $IPTABLES -A RULE_37  -j LOG  --log-level info --log-prefix "RULE 37 -- DENY "
    $IPTABLES -A RULE_37  -j DROP
}

ip_forward() {
    :
    
}

reset_all() {
    :
    reset_iptables_v4
}

block_action() {
    reset_all
}

stop_action() {
    reset_all
    $IPTABLES -P OUTPUT  ACCEPT
    $IPTABLES -P INPUT   ACCEPT
    $IPTABLES -P FORWARD ACCEPT
}

check_iptables() {
    IP_TABLES="$1"
    [ ! -e $IP_TABLES ] && return 151
    NF_TABLES=$(cat $IP_TABLES 2>/dev/null)
    [ -z "$NF_TABLES" ] && return 152
    return 0
}
status_action() {
    check_iptables "/proc/net/ip_tables_names"
    ret_ipv4=$?
    check_iptables "/proc/net/ip6_tables_names"
    ret_ipv6=$?
    [ $ret_ipv4 -eq 0 -o $ret_ipv6 -eq 0 ] && return 0
    [ $ret_ipv4 -eq 151 -o $ret_ipv6 -eq 151 ] && {
        echo "iptables modules are not loaded"
    }
    [ $ret_ipv4 -eq 152 -o $ret_ipv6 -eq 152 ] && {
        echo "Firewall is not configured"
    }
    exit 3
}

# See how we were called.
# For backwards compatibility missing argument is equivalent to 'start'

cmd=$1
test -z "$cmd" && {
    cmd="start"
}

case "$cmd" in
    start)
        log "Activating firewall script generated Sun Apr 10 17:52:38 2011 by vadim"
        check_tools
         prolog_commands 
        check_run_time_address_table_files
        
        load_modules "nat "
        configure_interfaces
        verify_interfaces
        
         reset_all 
        
        script_body
        ip_forward
        epilog_commands
        RETVAL=$?
        ;;

    stop)
        stop_action
        RETVAL=$?
        ;;

    status)
        status_action
        RETVAL=$?
        ;;

    block)
        block_action
        RETVAL=$?
        ;;

    reload)
        $0 stop
        $0 start
        RETVAL=$?
        ;;

    interfaces)
        configure_interfaces
        RETVAL=$?
        ;;

    test_interfaces)
        FWBDEBUG="echo"
        configure_interfaces
        RETVAL=$?
        ;;



    *)
        echo "Usage $0 [start|stop|status|block|reload|interfaces|test_interfaces]"
        ;;

esac

exit $RETVAL